// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())
  name String
  email String @unique
  password String
  role_id Int @default(2)
  permissionCreated RolesHasPermissions[] @relation(name: "CreatorUserId")
  permissionsUpdated RolesHasPermissions[] @relation(name: "UpdaterUserId")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime? @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  role    Roles    @relation(fields: [role_id], references: [id], onDelete: Cascade)

  @@map("users")
}

model Roles {
  id Int @id @default(autoincrement())
  name String
  hasAllPermissions Boolean @default(false) @map("has_all_permissions")
  users User[]
  permissions RolesHasPermissions[]
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime? @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  @@map("roles")
}

model Permissions {
  id Int @id @default(autoincrement())
  name String
  resource String
  type String
  roles RolesHasPermissions[]
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime? @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  @@map("permissions")
}

model RolesHasPermissions {
  roleId Int @map("role_id")
  permissionId Int @map("permission_id")
  userCreatorId String? @map("user_creator_id")
  userUpdaterId String? @map("user_updater_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime? @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  role       Roles     @relation(fields: [roleId], references: [id], onDelete: Cascade)
  permission   Permissions @relation(fields: [permissionId], references: [id], onDelete: Cascade)
  
  userCreator User? @relation(name: "CreatorUserId",fields: [userCreatorId], references: [id], onDelete: Cascade)
  userUpdater User? @relation(name: "UpdaterUserId",fields: [userUpdaterId], references: [id], onDelete: Cascade)
  
  @@id([roleId, permissionId])
  @@map("roles_has_permissions")
}